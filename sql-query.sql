CREATE DATABASE FUNCIONARIOS
GO
USE FUNCIONARIOS
CREATE TABLE FUN_FUNCIONARIO(
FUN_IN_CODIGO INT NOT NULL IDENTITY CONSTRAINT FUN_PK_CODIGO PRIMARY KEY,
FUN_IN_CADASTRO INT NOT NULL CONSTRAINT FUN_UK_FUN_CADASTRO UNIQUE, 
FUN_ST_NOME VARCHAR(50) NOT NULL,
FUN_ST_CARGO VARCHAR(50) NOT NULL,
FUN_ST_GENERO VARCHAR(25) NULL,
FUN_DT_NASCIMENTO DATE NOT NULL, 
FUN_CH_RG CHAR(12) NOT NULL CONSTRAINT FUN_UK_FUN_RG UNIQUE CONSTRAINT FUN_CK_FUN_RG CHECK (FUN_CH_RG LIKE '[0-9][0-9][.][0-9][0-9][0-9][.][0-9][0-9][0-9][-][0-9]'),
FUN_ST_EMAIL VARCHAR(50) NULL,
FUN_CH_CELULAR VARCHAR(15) NULL,
FUN_DT_CADASTRO DATE NOT NULL CONSTRAINT FUN_DF_FUN_CADASTRO DEFAULT GETDATE()
)

SELECT * FROM FUN_FUNCIONARIO

INSERT INTO FUN_FUNCIONARIO(FUN_IN_CADASTRO, FUN_ST_NOME, FUN_ST_CARGO,FUN_ST_GENERO, FUN_DT_NASCIMENTO, FUN_CH_RG, FUN_ST_EMAIL, FUN_CH_CELULAR)
VALUES(123456, 'Lucas', 'Desenvolvedor', 'Masculino','2000-09-30', '40.448.223-1', 'teste@teste.com', '15-99471-5213')

INSERT INTO FUN_FUNCIONARIO(FUN_IN_CADASTRO, FUN_ST_NOME, FUN_ST_CARGO,FUN_ST_GENERO, FUN_DT_NASCIMENTO, FUN_CH_RG, FUN_ST_EMAIL, FUN_CH_CELULAR)
VALUES(12345678, 'Julio', 'RH','Masculino', '2001-05-21', '71.454.178-8', 'teste.t@teste.com', '15-99471-5223')


------

ALTER PROCEDURE SP_D_FUN_FUNCIONARIO
@CADASTRO INT AS
SET NOCOUNT ON
DECLARE @NR_CADASTRO INT
SELECT @NR_CADASTRO = COUNT (FUN_IN_CADASTRO) FROM FUN_FUNCIONARIO
WHERE FUN_IN_CADASTRO = @CADASTRO

IF @NR_CADASTRO = 0
BEGIN
	RAISERROR('Não é possível efetuar a exclusão. O cadastro informado não existe',15,1)
	RETURN
END

DELETE FROM FUN_FUNCIONARIO WHERE FUN_IN_CADASTRO = @CADASTRO
RETURN
GO

EXEC SP_D_FUN_FUNCIONARIO'123468'

SP_S_FUN_FUNCIONARIO

------

ALTER PROCEDURE SP_I_FUN_FUNCIONARIO
@CADASTRO INT, @NOME VARCHAR(50), @CARGO VARCHAR(50), @GENERO VARCHAR(25), @NASCIMENTO DATE, @RG CHAR(12), @EMAIL VARCHAR(50), @CELULAR VARCHAR(15), @CODIGOGERADO INT=0 OUT AS
SET NOCOUNT ON --DESLIGA AS LINHAS AFETADAS
DECLARE @NR_CADASTRO INT
DECLARE @NR_EMAIL INT
DECLARE @NR_CELULAR INT

--EFETURANDO O SELECT QUE IRÁ CONTAR A CADASTRO E ATRIBUINDO NA VARIÁVEL @NR_CADASTRO
SELECT @NR_CADASTRO = COUNT (FUN_IN_CADASTRO)
FROM FUN_FUNCIONARIO
WHERE FUN_IN_CADASTRO = @CADASTRO

--EFETURANDO O SELECT QUE IRÁ CONTAR O EMAIL E ATRIBUINDO NA VARIÁVEL @NR_EMAIL
SELECT @NR_EMAIL = COUNT (FUN_ST_EMAIL)
FROM FUN_FUNCIONARIO
WHERE FUN_ST_EMAIL = @EMAIL

--EFETURANDO O SELECT QUE IRÁ CONTAR O CELULAR E ATRIBUINDO NA VARIÁVEL @NR_CELULAR
SELECT @NR_CELULAR = COUNT (FUN_CH_CELULAR)
FROM FUN_FUNCIONARIO
WHERE FUN_CH_CELULAR = @CELULAR

--COMPARANDO SE O TOTAL DE CADASTRO É MAIOR QUE ZERO (OU SEJA, SE JÁ EXISTE NO BD)
IF @NR_CADASTRO > 0
BEGIN
	RAISERROR('O número do cadastro informado já existe em outro cadastro!',15,1)
	RETURN
END
--Verificando se o número da cadatsro é negativo
IF @CADASTRO < 0
BEGIN
	RAISERROR('O número do cadastro não pode ser negativo',15,1)
	RETURN
END
--Verificando se já possui um email existente
IF @NR_EMAIL > 0
BEGIN
	RAISERROR('O email informado já existe em outro cadastro!',15,1)
	RETURN
END
--Verificando se já possui um celular existente
IF @NR_CELULAR > 0
BEGIN
	RAISERROR('O número de celular informado já existe em outro cadastro!',15,1)
	RETURN
END
--COMPARANDO O TAMANHO DA STRING DOS CAMPOS NOME, CARGO, NASCIMENTO, RG, EMAIL
IF (LEN(TRIM(@NOME)) = 0) OR (LEN(TRIM(@CARGO)) = 0) OR (LEN(@NASCIMENTO) = 0) OR (LEN(TRIM(@RG)) = 0) OR (LEN(TRIM(@EMAIL)) = 0)
BEGIN
	RAISERROR('O nome, cargo, data de nascimento, rg e email são obrigatórios!',15,1)
	RETURN
END

INSERT INTO FUN_FUNCIONARIO(FUN_IN_CADASTRO, FUN_ST_NOME, FUN_ST_CARGO, FUN_ST_GENERO, FUN_DT_NASCIMENTO, FUN_CH_RG, FUN_ST_EMAIL, FUN_CH_CELULAR)
VALUES (@CADASTRO, @NOME, UPPER(@CARGO), @GENERO, @NASCIMENTO, @RG, @EMAIL, @CELULAR)

SET @CODIGOGERADO = SCOPE_IDENTITY() /* RETORNA O VALOR DO IDENTITY ATUAL */
PRINT @CODIGOGERADO -- NÃO É NECESSÁRIO PARA O PROJETO FINAL
RETURN @CODIGOGERADO
GO

EXEC SP_I_FUN_FUNCIONARIO 123456,'Leticia','Medica','Feminino','2000-02-15','23.456.789-1','teste@teste','15-99241-1453' 

SP_S_FUN_FUNCIONARIO

------

ALTER PROCEDURE SP_S_FUN_FUNCIONARIO AS

SELECT
	FUN_IN_CODIGO AS 'Código',
	FUN_IN_CADASTRO AS 'Número do cadastro',
	FUN_ST_NOME AS 'Nome',
	FUN_ST_CARGO AS 'Cargo',
	FUN_ST_GENERO AS 'Gênero',
	FUN_DT_NASCIMENTO AS 'Data de Nascimento',
	FUN_CH_RG AS 'RG',
	FUN_ST_EMAIL AS 'Email',
	FUN_CH_CELULAR AS 'Celular',
	CONVERT(CHAR(10), FUN_DT_CADASTRO,103) AS 'Data de inscrição'
FROM 
	FUN_FUNCIONARIO
ORDER BY
	FUN_IN_CADASTRO
GO

SP_S_FUN_FUNCIONARALTER PROCEDURE SP_S_FUN_FUNCIONARIO_CADASTRO
@CADASTRO INT
AS
SELECT
	FUN_IN_CODIGO AS 'Código',
	FUN_IN_CADASTRO AS 'Número do cadastro',
	FUN_ST_NOME AS 'Nome',
	FUN_ST_CARGO AS 'cargo',
	FUN_ST_GENERO AS 'Gênero',
	FUN_DT_NASCIMENTO AS 'Data de Nascimento',
	FUN_CH_RG AS 'RG',
	FUN_ST_EMAIL AS 'Email',
	FUN_CH_CELULAR AS 'Celular',
	CONVERT(CHAR(10), FUN_DT_CADASTRO,103) AS 'Data de inscrição'
FROM
FUN_FUNCIONARIO
WHERE
FUN_IN_CADASTRO = @CADASTRO
ORDER BY
FUN_IN_CADASTRO 

SP_S_FUN_FUNCIONARIO_CADASTRO 123456, 'Juliana', 'Desenvolvimento','Feminino', '2001-05-12', '31.454.178-2', 'teste@teste.com', '15-99471-5213'

SP_S_FUN_FUNCIONARIO

-------

CREATE PROCEDURE SP_U_FUN_FUNCIONARIO
@CADASTRO INT, @NOME VARCHAR(50), @CARGO VARCHAR(50), @GENERO VARCHAR(25), @NASCIMENTO DATE, @RG CHAR(12), @EMAIL VARCHAR(50), @CELULAR VARCHAR(15) 
AS
SET NOCOUNT ON --DESLIGA AS LINHAS AFETADAS
DECLARE @NR_CADASTRO INT
--EFETURANDO O SELECT QUE IRÁ CONTAR A CADASTRO E ATRIBUINDO NA VARIÁVEL @NR_CADASTRO
SELECT @NR_CADASTRO = COUNT (FUN_IN_CADASTRO)
FROM FUN_FUNCIONARIO
WHERE FUN_IN_CADASTRO = @CADASTRO

--COMPARANDO SE O TOTAL DE CADASTRO É MAIOR QUE ZERO (OU SEJA, SE JÁ EXISTE NO BD)
IF @NR_CADASTRO = 0
BEGIN
	RAISERROR('Não foi possível efetuar a alteração! O cadastro informada não existe!.',15,1)
	RETURN
END
--Verificando se o número do cadastro é negativo
IF @CADASTRO < 0
BEGIN
	RAISERROR('O número do cadastro não pode ser negativo',15,1)
	RETURN
END

--COMPARANDO O TAMANHO DA STRING DOS CAMPOS NOME, CARGO, NASCIMENTO, RG, EMAIL
IF (LEN(TRIM(@NOME)) = 0) OR (LEN(TRIM(@CARGO)) = 0) OR (LEN(@NASCIMENTO) = 0) OR (LEN(TRIM(@RG)) = 0) OR (LEN(TRIM(@EMAIL)) = 0)
BEGIN
	RAISERROR('O nome, cargo, data de nascimento, rg e email são obrigatórios!',15,1)
	RETURN
END

UPDATE FUN_FUNCIONARIO
	SET FUN_IN_CADASTRO = @CADASTRO,
	FUN_ST_NOME = @NOME,
	FUN_ST_CARGO = UPPER(@CARGO),
	FUN_ST_GENERO = @GENERO,
	FUN_DT_NASCIMENTO = @NASCIMENTO,
	FUN_CH_RG = @RG,
	FUN_ST_EMAIL = @EMAIL,
	FUN_CH_CELULAR = @CELULAR
WHERE FUN_IN_CADASTRO = @CADASTRO
GO

EXEC SP_U_FUN_FUNCIONARIO 1234567, 'Juliana', 'Desenvolvimento','Feminino', '2001-05-12', '31.454.178-2', 'teste@teste.com', '15-99471-5213')

SP_S_FUN_FUNCIONARIO

-----

